"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _Table = _interopRequireDefault(require("react-bootstrap/Table"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Table({
  clickable,
  children,
  header,
  fixed
}) {
  return /*#__PURE__*/_react.default.createElement(_Table.default, {
    striped: true,
    borderless: true,
    hover: clickable,
    size: "sm",
    style: {
      cursor: clickable ? 'pointer' : undefined
    },
    className: fixed ? 'ge-Table-fixed' : undefined
  }, header && /*#__PURE__*/_react.default.createElement("thead", null, /*#__PURE__*/_react.default.createElement("tr", null, header)), /*#__PURE__*/_react.default.createElement("tbody", null, children));
}

function TableRow({
  onClick,
  data,
  children
}) {
  const handleClick = (0, _react.useCallback)(() => onClick(data), [data, onClick]);
  return /*#__PURE__*/_react.default.createElement("tr", {
    onClick: onClick ? handleClick : undefined
  }, children);
}

var _default = Object.assign(Table, {
  Row: TableRow
});

exports.default = _default;