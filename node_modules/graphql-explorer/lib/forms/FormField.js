"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _Form = _interopRequireDefault(require("react-bootstrap/Form"));

var _reactFormal = _interopRequireDefault(require("react-formal"));

var _DropdownList = _interopRequireDefault(require("react-widgets/lib/DropdownList"));

var _FormFields = require("./FormFields");

const _excluded = ["value", "onChange"],
      _excluded2 = ["children", "as"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const Message = props => {
  return /*#__PURE__*/_react.default.createElement(_reactFormal.default.Message, {
    for: props.for
  }, errors => /*#__PURE__*/_react.default.createElement("div", {
    className: "invalid-feedback ge-FormField"
  }, errors.join(', ')));
};

function Check(_ref) {
  let {
    value,
    onChange
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, _excluded);

  const realOnChange = (0, _react.useCallback)(e => {
    onChange(e.target.checked);
  }, [onChange]);
  return /*#__PURE__*/_react.default.createElement(_Form.default.Check, _extends({}, props, {
    checked: value,
    onChange: realOnChange
  }));
}

const FormField = /*#__PURE__*/_react.default.forwardRef((_ref2, ref) => {
  let {
    children,
    as
  } = _ref2,
      props = _objectWithoutPropertiesLoose(_ref2, _excluded2);

  return /*#__PURE__*/_react.default.createElement(_reactFormal.default.Field, _extends({
    ref: ref
  }, props), (innerProps, meta) => {
    if (typeof children === 'function') return children(innerProps);
    const fieldProps = Object.assign({}, innerProps);
    const schema = (0, _FormFields.resolveLazy)(meta.schema);
    const whitelist = // eslint-disable-next-line no-underscore-dangle
    schema._whitelist && schema._whitelist.list;
    const {
      Component,
      field
    } = schema.meta();
    let Input = as || Component;

    if (!Input) {
      if (whitelist && whitelist.size > 0) {
        Input = _DropdownList.default;
        fieldProps.data = Array.from(whitelist); // fieldProps.textField = String;
      } else if (schema.type === 'boolean') {
        Input = Check;
      } else {
        Input = _Form.default.Control;
      }
    }

    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(Input, fieldProps, children), field.description ? /*#__PURE__*/_react.default.createElement(_Form.default.Text, {
      muted: true
    }, field.description) : null, /*#__PURE__*/_react.default.createElement(Message, {
      for: props.name
    }));
  });
});

var _default = Object.assign(FormField, {
  Message
});

exports.default = _default;