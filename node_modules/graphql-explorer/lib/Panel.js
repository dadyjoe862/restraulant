"use strict";

exports.__esModule = true;
exports.default = Panel;

var _graphql = require("graphql");

var _react = _interopRequireWildcard(require("react"));

var _reactBootstrap = require("react-bootstrap");

var _ListGroup = _interopRequireDefault(require("react-bootstrap/ListGroup"));

var _Spinner = _interopRequireDefault(require("react-bootstrap/Spinner"));

var _md = require("react-icons/md");

var _ExplorerContext = require("./ExplorerContext");

var _ArgumentsForm = _interopRequireDefault(require("./forms/ArgumentsForm"));

var _PanelContainer = _interopRequireWildcard(require("./ui/PanelContainer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Panel({
  title,
  type,
  formArgs,
  execute,
  allowSubFragment,
  defaultFormValue,
  canClose = true
}) {
  const {
    closePanel,
    closeChildPanel
  } = (0, _PanelContainer.usePanelContext)();
  const waitToSubmit = formArgs.filter(a => a.type instanceof _graphql.GraphQLNonNull).length > 0;
  const [input, setInputBase] = (0, _react.useState)(waitToSubmit ? undefined : defaultFormValue);
  const [item, setItem] = (0, _react.useState)();
  const [error, setError] = (0, _react.useState)();
  const [loading, setLoading] = (0, _react.useState)(false);
  const waitingForInput = waitToSubmit && !input;
  const setInput = (0, _react.useCallback)(newInput => {
    setInputBase(newInput);
    closeChildPanel();
  }, [closeChildPanel]);
  const explorer = (0, _ExplorerContext.useExplorer)();
  (0, _react.useEffect)(() => {
    async function fetchData() {
      if (waitingForInput) return; // wait to complete input

      setLoading(true);

      try {
        const newItem = await execute(input || {});
        setItem(newItem);
        setError(undefined);
        setLoading(false);
      } catch (ex) {
        setError(`${ex}`); // stringify so it can be rendered

        setItem(undefined);
        setLoading(false);
      }
    }

    fetchData();
  }, [execute, input, waitingForInput]);
  const executeQuery = (0, _react.useCallback)((fragment, newInput) => execute(newInput || input || {}, fragment), [execute, input]);
  const formContent = (0, _react.useMemo)(() => {
    if (!formArgs || formArgs.length === 0) return null;
    return /*#__PURE__*/_react.default.createElement(_ArgumentsForm.default, {
      args: formArgs,
      onSubmit: setInput,
      defaultValue: defaultFormValue
    });
  }, [defaultFormValue, formArgs, setInput]);
  const mainSection = (0, _react.useMemo)(() => {
    var _explorer$resolveType;

    if (waitingForInput) return null;
    if (loading) return /*#__PURE__*/_react.default.createElement(_PanelContainer.default.Body, null, /*#__PURE__*/_react.default.createElement("div", {
      style: {
        justifyContent: 'center',
        display: 'flex'
      }
    }, /*#__PURE__*/_react.default.createElement(_Spinner.default, {
      animation: "border",
      style: {
        height: '3rem',
        width: '3rem'
      }
    })));
    if (error) return /*#__PURE__*/_react.default.createElement(_ListGroup.default, {
      variant: "flush"
    }, /*#__PURE__*/_react.default.createElement(_ListGroup.default.Item, {
      variant: "danger"
    }, /*#__PURE__*/_react.default.createElement("pre", null, /*#__PURE__*/_react.default.createElement("code", null, error))));
    if (!item) return /*#__PURE__*/_react.default.createElement(_PanelContainer.default.Body, null, /*#__PURE__*/_react.default.createElement("h4", null, "No item found"));
    const Section = (_explorer$resolveType = explorer.resolveType(type)) == null ? void 0 : _explorer$resolveType.Section;
    if (!Section) return null;
    return /*#__PURE__*/_react.default.createElement(Section, {
      item: item,
      type: type,
      executeQuery: allowSubFragment ? executeQuery : undefined,
      input: input
    });
  }, [allowSubFragment, error, executeQuery, explorer, input, item, loading, type, waitingForInput]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_PanelContainer.default.Header, null, title, /*#__PURE__*/_react.default.createElement("div", {
    className: "d-flex"
  }, canClose && /*#__PURE__*/_react.default.createElement(_reactBootstrap.Button, {
    variant: "light",
    onClick: closePanel
  }, /*#__PURE__*/_react.default.createElement(_md.MdClose, null)))), formContent && /*#__PURE__*/_react.default.createElement(_PanelContainer.default.Body, null, formContent), mainSection);
}